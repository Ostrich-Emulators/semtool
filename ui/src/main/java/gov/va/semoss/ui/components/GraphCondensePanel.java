/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gov.va.semoss.ui.components;

import gov.va.semoss.om.SEMOSSVertex;
import gov.va.semoss.ui.components.playsheets.GraphPlaySheet;
import gov.va.semoss.ui.components.renderers.LabeledPairRenderer;
import gov.va.semoss.util.Utility;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;
import javax.swing.ButtonModel;
import javax.swing.DefaultComboBoxModel;
import org.openrdf.model.URI;

/**
 *
 * @author ryan
 */
public class GraphCondensePanel extends javax.swing.JPanel {

	public static enum EdgePropertySource {

		NODE, INEDGE, OUTEDGE
	};
	private final DefaultComboBoxModel<URI> removermodel
			= new DefaultComboBoxModel<>();
	private final DefaultComboBoxModel<URI> endpointmodel
			= new DefaultComboBoxModel<>();

	/**
	 * Creates new form GraphCondensePanel
	 */
	public GraphCondensePanel( GraphPlaySheet gps ) {
		initComponents();

		Set<URI> seen = new HashSet<>();
		for ( SEMOSSVertex v : gps.getVisibleGraph().getVertices() ) {
			URI type = v.getType();
			if ( !seen.contains( type ) ) {
				seen.add( type );
			}
		}

		Map<URI, String> labels = Utility.getInstanceLabels( seen, gps.getEngine() );
		labels = Utility.sortUrisByLabel( labels );

		for ( URI t : labels.keySet() ) {
			removermodel.addElement( t );
			endpointmodel.addElement( t );
		}

		LabeledPairRenderer<URI> renderer = LabeledPairRenderer.getUriPairRenderer();
		renderer.cache( labels );
		intermediateType.setRenderer( renderer );
		endpointType.setRenderer( renderer );

		inprop.setActionCommand( EdgePropertySource.INEDGE.toString() );
		outprop.setActionCommand( EdgePropertySource.OUTEDGE.toString() );
		nodeprop.setActionCommand( EdgePropertySource.NODE.toString() );
	}

	public URI getEdgeTypeToRemove() {
		return intermediateType.getItemAt( intermediateType.getSelectedIndex() );
	}

	public URI getEdgeEndpointType() {
		return endpointType.getItemAt( endpointType.getSelectedIndex() );
	}

	public EdgePropertySource getPropertySource() {
		ButtonModel bm = edgegroup.getSelection();
		String action = bm.getActionCommand();
		return EdgePropertySource.valueOf( action );
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings( "unchecked" )
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    edgegroup = new javax.swing.ButtonGroup();
    jLabel1 = new javax.swing.JLabel();
    intermediateType = new javax.swing.JComboBox<URI>();
    jPanel1 = new javax.swing.JPanel();
    nodeprop = new javax.swing.JRadioButton();
    inprop = new javax.swing.JRadioButton();
    outprop = new javax.swing.JRadioButton();
    jLabel2 = new javax.swing.JLabel();
    endpointType = new javax.swing.JComboBox<URI>();

    jLabel1.setText("Condense Nodes of Type");
    jLabel1.setToolTipText("Intermediate nodes of this type will be removed");

    intermediateType.setModel(removermodel);

    jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(java.awt.Color.gray, 1, true), "Generated Edge Properties Source"));

    edgegroup.add(nodeprop);
    nodeprop.setSelected(true);
    nodeprop.setText("Condensed Node");

    edgegroup.add(inprop);
    inprop.setText("In-Edge");

    edgegroup.add(outprop);
    outprop.setText("Out-Edge");

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(outprop)
          .addComponent(inprop)
          .addComponent(nodeprop))
        .addGap(103, 103, 103))
    );
    jPanel1Layout.setVerticalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addComponent(nodeprop)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(inprop)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(outprop))
    );

    jLabel2.setText("...That are Between Nodes of Type");

    endpointType.setModel(endpointmodel);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jLabel2)
          .addComponent(jLabel1))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(intermediateType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(endpointType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
      .addGroup(layout.createSequentialGroup()
        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(0, 127, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel1)
          .addComponent(intermediateType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel2)
          .addComponent(endpointType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(75, 75, 75))
    );
  }// </editor-fold>//GEN-END:initComponents


  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.ButtonGroup edgegroup;
  private javax.swing.JComboBox<URI> endpointType;
  private javax.swing.JRadioButton inprop;
  private javax.swing.JComboBox<URI> intermediateType;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JRadioButton nodeprop;
  private javax.swing.JRadioButton outprop;
  // End of variables declaration//GEN-END:variables
}

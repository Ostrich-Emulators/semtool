/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gov.va.semoss.ui.components.insight.manager;

import gov.va.semoss.om.Insight;
import gov.va.semoss.om.Parameter;
import gov.va.semoss.rdf.engine.util.NodeDerivationTools;
import gov.va.semoss.ui.components.renderers.LabeledPairRenderer;
import gov.va.semoss.util.Constants;
import gov.va.semoss.util.GuiUtility;
import gov.va.semoss.util.Utility;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTree;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import org.openrdf.model.URI;

/**
 *
 * @author ryan
 */
public class ParameterPanel extends DataPanel<Parameter> {

	private Insight insight;
	private final JTree tree;
	private final DefaultTreeModel model;

	public ParameterPanel( JTree tree, DefaultTreeModel model ) {
		this.tree = tree;
		this.model = model;
		initComponents();

		listenTo( parameterName );
		listenTo( parameterQuery );
	}

	public ParameterPanel() {
		this( null, null );
	}

	@Override
	protected void isetElement( Parameter p, DefaultMutableTreeNode node ) {
		parameterName.setText( p.getLabel() );
		parameterQuery.setText( p.getDefaultQuery() );
	}

	public void setInsight( Insight i ) {
		insight = i;
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings( "unchecked" )
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jLabel7 = new javax.swing.JLabel();
    parameterName = new javax.swing.JTextField();
    jScrollPane5 = new javax.swing.JScrollPane();
    parameterQuery = new gov.va.semoss.ui.components.tabbedqueries.SyntaxTextEditor();
    jLabel8 = new javax.swing.JLabel();
    conceptbtn = new javax.swing.JButton();

    jLabel7.setText("Parameter Label");

    parameterQuery.setColumns(20);
    parameterQuery.setRows(5);
    jScrollPane5.setViewportView(parameterQuery);

    jLabel8.setText("Query");

    conceptbtn.setText("Query Builder");
    conceptbtn.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        conceptbtnActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(jLabel7)
              .addComponent(jLabel8))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(parameterName)
              .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)))
          .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addGap(0, 0, Short.MAX_VALUE)
            .addComponent(conceptbtn)))
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel7)
          .addComponent(parameterName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(layout.createSequentialGroup()
            .addComponent(jLabel8)
            .addGap(0, 0, Short.MAX_VALUE))
          .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(conceptbtn)
        .addContainerGap())
    );
  }// </editor-fold>//GEN-END:initComponents

  private void conceptbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_conceptbtnActionPerformed

		List<URI> uris = NodeDerivationTools.createConceptList( getEngine() );
		Map<URI, String> labels = GuiUtility.getInstanceLabels( uris, getEngine() );
		labels = Utility.sortUrisByLabel( labels );

		uris = new ArrayList<>();

		Parameter parameter = getElement();
		Map<URI, Parameter> parameters = new HashMap<>();
		// we want the user to be able to select a parent parameter,
		// but we don't have that functionality yet, so we'll simulate it here
		for ( Parameter p : insight.getInsightParameters() ) {
			if ( !p.equals( parameter ) ) {
				parameters.put( p.getId(), p );
				uris.add( p.getId() );
				labels.put( p.getId(), "Instances of \"" + p.getLabel() + "\"" );
			}
		}

		uris.add( Constants.ANYNODE );
		labels.put( Constants.ANYNODE, "<Any Concept>" );

		uris.addAll( labels.keySet() );

		JComboBox<URI> combo = new JComboBox<>( uris.toArray( new URI[0] ) );
		LabeledPairRenderer<URI> renderer = LabeledPairRenderer.getUriPairRenderer();
		renderer.cache( labels );
		combo.setRenderer( renderer );
		String opts[] = { "Ok", "Cancel" };
		int ans = JOptionPane.showOptionDialog( this, combo, "Concept Type",
				JOptionPane.YES_NO_OPTION, JOptionPane.PLAIN_MESSAGE, null, opts, opts[0] );

		if ( JOptionPane.YES_OPTION == ans ) {
			URI type = combo.getItemAt( combo.getSelectedIndex() );
			if ( Constants.ANYNODE.equals( type ) ) {
				parameterQuery.setText( "SELECT ?concept\nWHERE {\n  ?concept rdfs:subClassOf <"
						+ getEngine().getSchemaBuilder().getConceptUri().build() + ">\n}" );
			}
			else if ( parameters.containsKey( type ) ) {
				Parameter p = parameters.get( type );
				// get the first variable
				Pattern pat = Pattern.compile( "^.* (\\?\\w+).*" );
				String pquery = p.getDefaultQuery().replaceAll( "\n", " " );
				Matcher m = pat.matcher( pquery );
				if ( m.matches() ) {
					String pvar = m.group( 1 );
					parameterQuery.setText( "SELECT ?instance WHERE { ?instance a " + pvar + " }" );
				}
			}
			else {
				String label = type.getLocalName();
				parameterQuery.setText( "SELECT ?" + label + "\nWHERE {\n  ?" + label
						+ " a <" + type.toString() + ">\n}" );
			}
		}
  }//GEN-LAST:event_conceptbtnActionPerformed

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton conceptbtn;
  private javax.swing.JLabel jLabel7;
  private javax.swing.JLabel jLabel8;
  private javax.swing.JScrollPane jScrollPane5;
  private javax.swing.JTextField parameterName;
  private gov.va.semoss.ui.components.tabbedqueries.SyntaxTextEditor parameterQuery;
  // End of variables declaration//GEN-END:variables

	@Override
	protected void updateElement( Parameter p ) {
		p.setLabel( parameterName.getText() );
		p.setDefaultQuery( parameterQuery.getText() );
	}
}

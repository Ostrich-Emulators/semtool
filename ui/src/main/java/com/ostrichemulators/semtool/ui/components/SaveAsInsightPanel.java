/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ostrichemulators.semtool.ui.components;

import com.ostrichemulators.semtool.om.Insight;
import com.ostrichemulators.semtool.om.InsightOutputType;
import com.ostrichemulators.semtool.om.Perspective;
import com.ostrichemulators.semtool.rdf.engine.api.IEngine;
import com.ostrichemulators.semtool.rdf.engine.api.InsightManager;
import com.ostrichemulators.semtool.rdf.engine.util.EngineUtil;
import com.ostrichemulators.semtool.ui.components.renderers.PerspectiveRenderer;
import java.awt.Component;
import java.util.Collection;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import org.apache.log4j.Logger;

/**
 *
 * @author ryan
 */
public class SaveAsInsightPanel extends javax.swing.JPanel {

	private IEngine engine;

	/**
	 * Creates new form SaveAsInsightPanel
	 */
	public SaveAsInsightPanel( IEngine engine ) {
		initComponents();

		insightname.setText( "Insight-" + ( new Date().getTime() ) );

		InsightManager im = engine.getInsightManager();
		Collection<Perspective> perps = im.getPerspectives();
		DefaultComboBoxModel<Perspective> model
				= new DefaultComboBoxModel<>( perps.toArray( new Perspective[0] ) );
		perspectives.setModel( model );
		perspectives.setRenderer( new PerspectiveRenderer() );
	}

	public static void showDialog( Component frame, IEngine engine, String sparql ) {
		SaveAsInsightPanel p = new SaveAsInsightPanel( engine );
		String[] choices = { "Save", "Cancel" };

		boolean tryagain = true;

		while ( tryagain ) {
			int ans = JOptionPane.showOptionDialog( frame, p, "Save As Insight",
					JOptionPane.YES_NO_OPTION, JOptionPane.PLAIN_MESSAGE, null, choices,
					choices[0] );
			if ( 0 == ans ) {
				InsightManager im = engine.getInsightManager();
				Perspective persp
						= p.perspectives.getItemAt( p.perspectives.getSelectedIndex() );
				List<Insight> insightlist = persp.getInsights();

				boolean seenit = false;
				for ( Insight i : insightlist ) {
					if ( i.getLabel().equals( p.insightname.getText() ) ) {
						seenit = true;
					}
				}

				tryagain = seenit;

				if ( !seenit ) {
					Insight insight = new Insight( p.insightname.getText(), sparql,
							InsightOutputType.GRID );

					im.add( insight );

					try {
						im.addInsight( persp, insight, -1 );
						EngineUtil.getInstance().importInsights( engine, im );
					}
					catch ( Exception e ) {
						Logger.getLogger( SaveAsInsightPanel.class ).error( e, e );
					}
				}
			}
			else {
				tryagain = false;
			}
		}
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings( "unchecked" )
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jLabel1 = new javax.swing.JLabel();
    perspectives = new javax.swing.JComboBox<Perspective>();
    jLabel2 = new javax.swing.JLabel();
    insightname = new javax.swing.JTextField();

    jLabel1.setText("Perspective");

    perspectives.setEditable(true);
    perspectives.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

    jLabel2.setText("New Insight Name");

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jLabel1)
          .addComponent(jLabel2))
        .addGap(0, 0, Short.MAX_VALUE)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
          .addComponent(insightname)
          .addComponent(perspectives, 0, 191, Short.MAX_VALUE)))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(insightname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel2))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jLabel1)
          .addComponent(perspectives, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
  }// </editor-fold>//GEN-END:initComponents


  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JTextField insightname;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JComboBox<Perspective> perspectives;
  // End of variables declaration//GEN-END:variables
}

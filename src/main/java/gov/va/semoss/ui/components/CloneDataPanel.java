/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gov.va.semoss.ui.components;

import java.awt.Frame;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.io.File;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Map;
import javax.swing.JDialog;
import org.apache.log4j.Logger;
import org.openrdf.model.URI;
import org.openrdf.model.impl.URIImpl;
import org.openrdf.model.vocabulary.RDFS;
import org.openrdf.query.MalformedQueryException;
import org.openrdf.query.QueryEvaluationException;
import org.openrdf.repository.RepositoryException;
import gov.va.semoss.rdf.engine.api.IEngine;
import gov.va.semoss.rdf.engine.api.MetadataConstants;
import gov.va.semoss.rdf.query.util.MetadataQuery;
import gov.va.semoss.util.Constants;
import gov.va.semoss.rdf.engine.util.EngineUtil.DbCloneMetadata;

/**
 *
 * @author ryan
 */
public class CloneDataPanel extends javax.swing.JPanel {

  /**
   * Creates new form CloneDataPanel
   */
  public CloneDataPanel() {
    initComponents();
  }

  public void setDbDir( File dir ) {
    dbdir.setFileText( dir );
  }

  public void setBaseUri( String uri ) {
    baseuri.setText( uri );

    URI base = null;
    try {
      base = new URIImpl( uri );
    }
    catch ( Exception ex ) {
      // don't care
    }

    save.setEnabled( null != base );
  }

  public void setOkActionListener( ActionListener al ) {
    save.addActionListener( al );
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings( "unchecked" )
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jLabel1 = new javax.swing.JLabel();
    dbdir = new gov.va.semoss.ui.components.FileBrowsePanel();
    jLabel2 = new javax.swing.JLabel();
    dbname = new javax.swing.JTextField();
    jPanel1 = new javax.swing.JPanel();
    save = new javax.swing.JButton();
    cancel = new javax.swing.JButton();
    jLabel3 = new javax.swing.JLabel();
    title = new javax.swing.JTextField();
    jLabel4 = new javax.swing.JLabel();
    baseuri = new javax.swing.JTextField();

    jLabel1.setText("Location");

    jLabel2.setText("Filename");

    save.setText("Save");
    jPanel1.add(save);

    cancel.setText("Cancel");
    jPanel1.add(cancel);

    jLabel3.setText("Title");

    jLabel4.setText("Base URI");

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jLabel1)
          .addComponent(jLabel2)
          .addComponent(jLabel3)
          .addComponent(jLabel4))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(dbname)
          .addComponent(title)
          .addComponent(dbdir, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
          .addComponent(baseuri, javax.swing.GroupLayout.Alignment.TRAILING))
        .addContainerGap())
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
        .addGap(0, 0, Short.MAX_VALUE)
        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addComponent(dbdir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel1))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel2)
          .addComponent(dbname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel3))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel4)
          .addComponent(baseuri, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
    );
  }// </editor-fold>//GEN-END:initComponents


  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JTextField baseuri;
  private javax.swing.JButton cancel;
  private gov.va.semoss.ui.components.FileBrowsePanel dbdir;
  private javax.swing.JTextField dbname;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JLabel jLabel4;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JButton save;
  private javax.swing.JTextField title;
  // End of variables declaration//GEN-END:variables

  public static DbCloneMetadata showDialog( Frame frame, IEngine engine ) {
    final CloneDataPanel cdp = new CloneDataPanel();
    cdp.save.setEnabled( false );
    final JDialog dlg = new JDialog( frame, "Clone Data",  true );
    dlg.getContentPane().add( cdp );
    dlg.setSize( 500, 250 );
    dlg.setDefaultCloseOperation( JDialog.DISPOSE_ON_CLOSE );

    Map<URI, String> metas = null;
    try {
      MetadataQuery mq = new MetadataQuery();
      metas = engine.query( mq );
      String uri = metas.get( MetadataConstants.VOID_DS );
      if ( null != uri ) {
        cdp.setBaseUri( uri );
      }

      if ( !metas.containsKey( RDFS.LABEL ) ) {
        metas.put( RDFS.LABEL, engine.getEngineName() );
      }
    }
    catch ( RepositoryException | MalformedQueryException | QueryEvaluationException e ) {
      Logger.getLogger( CloneDataPanel.class ).warn( e, e );
    }

    final boolean oks[] = { false };
    ActionListener al = new ActionListener() {

      @Override
      public void actionPerformed( ActionEvent e ) {
        oks[0] = ( cdp.save == e.getSource() );
        dlg.setVisible( false );
      }
    };

    cdp.save.addActionListener( al );
    cdp.cancel.addActionListener( al );
    Date time = new Date();
    cdp.dbname.setText( engine.getEngineName()
        + new SimpleDateFormat( "_yyyyMMdd_HHmmss" ).format( time ) );
    cdp.title.setText( "Clone of "+metas.get( RDFS.LABEL )
        + new SimpleDateFormat( " yyyyMMdd_HHmmss" ).format( time ) );
    cdp.baseuri.addKeyListener( new KeyAdapter() {

      @Override
      public void keyTyped( KeyEvent e ) {
        URI base = null;
        try {
          base = new URIImpl( cdp.baseuri.getText() );
        }
        catch ( Exception ex ) {
          // don't care
        }

        cdp.save.setEnabled( null != base );
      }
    } );

    File smssloc = new File( engine.getProperty( Constants.SMSS_LOCATION ) );
    smssloc = smssloc.getParentFile();
    String smssversion = engine.getProperty( Constants.SMSS_VERSION_KEY );
    if ( null != smssversion && Double.parseDouble( smssversion ) >= 1.0 ) {
      smssloc = smssloc.getParentFile();
    }
    cdp.dbdir.setFileText( smssloc );

    dlg.pack();
    dlg.setLocationRelativeTo( frame );
    dlg.setVisible( true );

    if ( oks[0] ) {
      //File location, String dbname, String title, URI baseuri )
      return new DbCloneMetadata( cdp.dbdir.getFirstFile(),
          cdp.dbname.getText(), cdp.title.getText(),
          new URIImpl( cdp.baseuri.getText() ) );
    }

    return null;
  }
}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gov.va.semoss.ui.components;

import java.awt.Frame;
import java.io.File;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Map;
import org.apache.log4j.Logger;
import org.openrdf.model.URI;
import org.openrdf.model.vocabulary.RDFS;
import org.openrdf.query.MalformedQueryException;
import org.openrdf.query.QueryEvaluationException;
import org.openrdf.repository.RepositoryException;
import gov.va.semoss.rdf.engine.api.IEngine;
import gov.va.semoss.rdf.query.util.MetadataQuery;
import gov.va.semoss.rdf.engine.util.EngineUtil.DbCloneMetadata;
import java.util.prefs.Preferences;
import javax.swing.JOptionPane;

/**
 *
 * @author ryan
 */
public class CloneDataPanel extends javax.swing.JPanel {

	/**
	 * Creates new form CloneDataPanel
	 */
	public CloneDataPanel() {
		initComponents();

		Preferences prefs = Preferences.userNodeForPackage( DbCloneMetadata.class );
		dbdir.setPreferencesKeys( prefs, "lastclonedir" );
		dbdir.setFileTextFromInit();
	}

	public void setDbDir( File dir ) {
		dbdir.setFileText( dir );
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings( "unchecked" )
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jLabel1 = new javax.swing.JLabel();
    dbdir = new gov.va.semoss.ui.components.FileBrowsePanel();
    jLabel2 = new javax.swing.JLabel();
    dbname = new javax.swing.JTextField();
    jLabel3 = new javax.swing.JLabel();
    title = new javax.swing.JTextField();
    insights = new javax.swing.JCheckBox();
    data = new javax.swing.JCheckBox();

    jLabel1.setText("Location");

    jLabel2.setText("Filename");

    jLabel3.setText("Title");

    insights.setSelected(true);
    insights.setText("Insights");

    data.setSelected(true);
    data.setText("Data");

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(jLabel1)
              .addComponent(jLabel2)
              .addComponent(jLabel3))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(dbname)
              .addComponent(title)
              .addComponent(dbdir, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)))
          .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(insights)
              .addComponent(data))
            .addGap(0, 0, Short.MAX_VALUE)))
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addComponent(dbdir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel1))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel2)
          .addComponent(dbname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel3))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(data)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(insights)
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
  }// </editor-fold>//GEN-END:initComponents


  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JCheckBox data;
  private gov.va.semoss.ui.components.FileBrowsePanel dbdir;
  private javax.swing.JTextField dbname;
  private javax.swing.JCheckBox insights;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JTextField title;
  // End of variables declaration//GEN-END:variables

	public static DbCloneMetadata showDialog( Frame frame, IEngine engine,
			boolean doinsights, boolean dodata ) {
		final CloneDataPanel cdp = new CloneDataPanel();
		cdp.insights.setSelected( doinsights );
		cdp.data.setSelected( dodata );

		Map<URI, String> metas = null;
		try {
			MetadataQuery mq = new MetadataQuery();
			engine.query( mq );
			metas = mq.asStrings();

			if ( !metas.containsKey( RDFS.LABEL ) ) {
				metas.put( RDFS.LABEL, engine.getEngineName() );
			}
		}
		catch ( RepositoryException | MalformedQueryException | QueryEvaluationException e ) {
			Logger.getLogger( CloneDataPanel.class ).warn( e, e );
		}

		Date time = new Date();
		cdp.dbname.setText( engine.getEngineName()
				+ new SimpleDateFormat( "_yyyyMMdd_HHmmss" ).format( time ) );
		cdp.title.setText( "Copy of " + metas.get( RDFS.LABEL )
				+ new SimpleDateFormat( " yyyyMMdd_HHmmss" ).format( time ) );

		int ans = JOptionPane.showOptionDialog( frame, cdp, "Copy Database",
				JOptionPane.YES_NO_OPTION, JOptionPane.PLAIN_MESSAGE, null,
				new String[]{ "Copy", "Cancel" }, "Copy" );
		if ( 0 == ans ) {
			return new DbCloneMetadata( cdp.dbdir.getFirstFile(),
					cdp.dbname.getText(), cdp.title.getText(),
					cdp.insights.isSelected(), cdp.data.isSelected() );

		}
		return null;
	}
}
